{% set name = 'nleqslv' %}
{% set version = '3.2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-{{ name|lower }}
  version: {{ version|replace("-", "_") }}

source:
  fn: {{ name }}_{{ version }}.tar.gz
  url:
    - https://cran.r-project.org/src/contrib/{{ name }}_{{ version }}.tar.gz
    - https://cran.r-project.org/src/contrib/Archive/{{ name }}/{{ name }}_{{ version }}.tar.gz


  # You can add a hash for the file here, like md5 or sha1
  # md5: 49448ba4863157652311cc5ea4fea3ea
  # sha1: 3bcfbee008276084cbb37a2b453963c61176a322
  # patches:
   # List any patch files here
   # - fix.patch

build:
  # If this is a new build for the same version, increment the build number.
  number: 0

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/


requirements:
  build:
    - r-base
    - posix                # [win]
    - {{native}}toolchain  # [win]
    - gcc                  # [not win]

  run:
    - r-base

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('nleqslv')"  # [not win]
    - "\"%R%\" -e \"library('nleqslv')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=nleqslv
  license: GPL (>= 2)
  summary: Solve a system of nonlinear equations using a Broyden or a Newton method with a choice
    of global strategies such as line search and trust region. There are options for
    using a numerical or user supplied Jacobian, for specifying a banded numerical Jacobian
    and for allowing a singular or ill-conditioned Jacobian.
  license_family: GPL3

# The original CRAN metadata for this package was:

# Package: nleqslv
# Type: Package
# Title: Solve Systems of Nonlinear Equations
# Version: 3.2
# Date: 2017-02-28
# Author: Berend Hasselman
# Maintainer: Berend Hasselman <bhh@xs4all.nl>
# Description: Solve a system of nonlinear equations using a Broyden or a Newton method with a choice of global strategies such as line search and trust region. There are options for using a numerical or user supplied Jacobian, for specifying a banded numerical Jacobian and for allowing a singular or ill-conditioned Jacobian.
# License: GPL (>= 2)
# NeedsCompilation: yes
# Packaged: 2017-02-28 15:32:27 UTC; berendhasselman
# Repository: CRAN
# Date/Publication: 2017-03-04 17:12:30

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
