package:
  name: gdsctools
  version: "0.17.1"

source:
  fn: gdsctools-0.17.1.tar.gz
  url: https://pypi.python.org/packages/3f/23/42e7f13994b41201b39010947579d0baf39d05506edd6d1e96e87c351621/gdsctools-0.17.1.tar.gz
  md5: 6eea5d390ebc99b25758f962b15be906
#  patches:
   # List any patch files here
   # - fix.patch

build:
  skip: True # [py34]
  # noarch_python: True
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - gdsctools = gdsctools:main
    #
    # Would create an entry point called gdsctools that calls gdsctools.main()

    - gdsctools_anova=gdsctools.scripts.anova:main
    - gdsctools_regression=gdsctools.scripts.regression:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - numpy
    - numexpr
    - matplotlib >=1.4.3
    - pandas >=0.19
    - easydev >=0.9.34
    - scipy
    - colormap >=1.0
    - jinja2 <=2.9.1
    - statsmodels
    - scikit-learn
    - reports >=0.3.0
    - biokit >=0.4
    - colorlog
    - xlrd

  run:
    - python
    - numpy
    - numexpr
    - matplotlib >=1.4.3
    - pandas >=0.19
    - easydev >=0.9.34
    - scipy
    - colormap >=1.0
    - jinja2 <=2.9.1
    - statsmodels
    - scikit-learn
    - reports >=0.3.0
    - biokit >=0.4
    - colorlog
    - xlrd

test:
  # Python imports
  imports:
    - gdsctools
    - gdsctools.data
    - gdsctools.data.css
    - gdsctools.data.images
    - gdsctools.data.javascript
    - gdsctools.data.templates
    - gdsctools.pipelines
    - gdsctools.scripts

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - gdsctools_anova --help
    - gdsctools_regression --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: ['http://pypi.python.org/pypi/gdsctools']
  license: BSD License
  summary: 'Set of tools and pipelines to analyse GDSC data (cancerrxgene.org)'
  license_family: BSD

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
